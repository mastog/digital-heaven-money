---
import { Image } from "astro:assets";
import decorForm from "../../assets/pics/contact-pic.svg";
import FormComponent from '../FormComponents.jsx';
import login from '../../utils/formConfigs/login';
---

<head>
  <script type="module">
    import RefreshRuntime from 'http://localhost:4321/@react-refresh';
    RefreshRuntime.injectIntoGlobalHook(window);
    window.$RefreshReg$ = () => {};
    window.$RefreshSig$ = () => (type) => type;
    window.__vite_plugin_react_preamble_installed__ = true;
  </script>
</head>

<div class="flex relative justify-start items-center p-[60px] bg-[#F3F3F3] rounded-[45px] overflow-hidden">
  <div class="bg-gray sm:p-6 h-full w-full lg:max-w-lg">
    <!-- Sign In / Sign Up Toggle -->
    <div class="flex flex-col sm:flex-row gap-[35px] sm:items-center mb-10">
      <div class="flex items-center gap-[14px]">
        <input
          type="radio"
          name="formToggle"
          id="checkbox1"
          class="form-checkbox text-black"
          checked
          onchange="document.getElementById('signInForm').classList.remove('hidden'); document.getElementById('signUpForm').classList.add('hidden')"
        />
        <label for="checkbox1" class="text-black">
          Sign In
        </label>
      </div>
      <div class="flex items-center gap-[14px]">
        <input
          type="radio"
          name="formToggle"
          id="checkbox2"
          class="form-checkbox text-black"
          onchange="document.getElementById('signUpForm').classList.remove('hidden'); document.getElementById('signInForm').classList.add('hidden')"
        />
        <label for="checkbox2" class="flex items-center text-black">
          Sign Up
        </label>
      </div>
    </div>

    <!-- Forms Container -->
    <div class="forms-container">
      <!-- Sign In Form -->
      <div id="signInForm">
        <FormComponent
          client:load
          apiUrl="/login"
          method="POST"
          fields={[
            { name: 'username', label: 'Username*', type: 'text', placeholder: 'Username', required: true },
            { name: 'password', label: 'Password*', type: 'password', placeholder: 'Password', required: true }
          ]}
          submitText="Login"
          classConfig={login}
          onSuccess={(data) => {
            if (data.access_token && data.refresh_token) {
              localStorage.setItem('accessToken', data.access_token);
              localStorage.setItem('refreshToken', data.refresh_token);
              alert('Login successful!');
              window.location.href = '/';
            }
          }}
        />
      </div>

      <!-- Sign Up Form -->
      <div id="signUpForm" class="hidden">
        <FormComponent
          client:load
          apiUrl="/register"
          method="POST"
          fields={[
            { name: 'username', label: 'Username*', type: 'text', placeholder: 'Username', required: true },
            { name: 'email', label: 'Email*', type: 'email', placeholder: 'Email', required: true },
            { name: 'password', label: 'Password*', type: 'password', placeholder: 'Password', required: true },
            { name: 'confirm_password', label: 'Confirm Password*', type: 'password', placeholder: 'Confirm Password', required: true }
          ]}
          submitText="Join"
          classConfig={login}
          onSuccess={() => {
            alert('Registration successful!');
            window.location.reload();
          }}
        />
      </div>
    </div>
  </div>

  <!-- Image Decoration -->
  <picture class="ml-auto lg:block">
    <Image src={decorForm} alt="decor" class="h-auto max-h-full w-auto object-contain" />
  </picture>
</div>

<style>
  .form-checkbox {
    appearance: none;
    width: 28px;
    height: 28px;
    border: 1px solid #000;
    border-radius: 50%;
    outline: none;
    cursor: pointer;
    position: relative;
  }

  .form-checkbox:before {
    content: "";
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    position: absolute;
    top: 0;
    left: 0;
    background: var(--green);
    transform: scale(0);
    transition: transform 0.1s ease-in-out;
  }

  .form-checkbox:checked:before {
    transform: scale(0.6);
  }

  .hidden {
    display: none;
  }
</style>