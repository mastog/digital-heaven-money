---
import { Image } from "astro:assets";
import AccordionButton from "./AccordionButton.astro";
import TechItem from "./TechItem.astro";

const {
    id,
    name,
    picture,
    time,
    title,
    description
} = Astro.props;
---

<style>
    .description {
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 5;
        overflow: hidden;
        position: relative;
        word-wrap: break-word;
        overflow-wrap: break-word;
        transition: max-height 0.3s ease-in-out;
    }

    .description.expanded {
        -webkit-line-clamp: unset; 
        overflow: visible;
    }
    article.enlarged{
        margin-bottom: 300px;
        transition: margin-bottom 0.3s ease-in-out;
    }
    article{
        transition: margin-bottom 0.3s ease-in-out;
    }
    .job-card:nth-child(2n + 1) .job-picture img{
        transform-origin: top left;
    }
    .job-card:nth-child(2n) .job-picture img{
        transform-origin: top right;
    }
    .job-card:nth-child(2n + 1) .job-picture img.enlarged {
        transform: scale(3);
        transition: transform 0.3s ease-in-out;
    }
    .job-card:nth-child(2n) .job-picture img.enlarged {
        transform: scale(3);
        transition: transform 0.3s ease-in-out;
    }
    .job-card .job-picture img {
        cursor: pointer;
        border-radius: 10px;
    }
    @media screen and (min-width: 640px) {
        .job-card:nth-child(2n) {
            transform: translateX(100%);
            padding-right: 0;
        }

        .job-card:nth-child(2n + 1) {
            padding-left: 0;
            text-align: right;
            padding-right: 1.5rem;
        }

        .job-card:nth-child(2n + 1) .job-picture {
            left: calc(100% + 2rem);
        }

        .job-card:nth-child(2n) .job-picture {
            left: calc(-120px - 7rem);
        }

        .job-card:nth-child(2n + 1) .dot {
            transform: rotate(180deg);
            left: calc(100% - 0.75rem);
        }

    }
</style>
<article
    class="job-card group relative flex flex-col pl-6 gap-4 sm:w-[50%] sm:even:translate-x-full pr-0 sm:odd:pl-0 odd:pr-6"
>

    <img src="/dot.svg" alt="dot" class="dot absolute top-0 left-[-10px] h-[24px] w-[24px] rounded-full" />

    <div class="relative flex flex-col">
        <div class="flex flex-col mb-4">
            <h1
                class="text-light-texto-primary dark:text-dark-texto-primary font-black text-xl"
            >
                {title}
            </h1>
            <span
                class="text-light-gray-primary dark:text-dark-gray-primary font-bold text-base"
            >
                {time}
            </span>
        </div>
        <p
            class="description text-[1.1rem] sm:text-base text-light-texto-secondary dark:text-dark-texto-secondary w-full"
            id={`accordion-${id}`}
        >
            {description}
        </p>
        {description.length > 220 && (
            <AccordionButton dataTarget={id} />
        )}
    </div>
    <div
        class="relative job-picture top-0 p-2 flex flex-col justify-center items-center gap-4 sm:absolute h-[200px] w-[200px] object-contain rounded-3xl bg-white "
    >
        <Image
            class="w-full h-auto transition hover:scale-110"
            src={picture}
            alt={`Picture of ${name} on ${time}`}
            loading="lazy"
        />
    </div>
</article>
